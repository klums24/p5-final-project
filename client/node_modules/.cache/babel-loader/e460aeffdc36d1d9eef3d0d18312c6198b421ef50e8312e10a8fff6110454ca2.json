{"ast":null,"code":"var _jsxFileName = \"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    // Open WebSocket connection\n    socketRef.current = new WebSocket('ws://localhost:8080');\n\n    // Handle incoming messages\n    socketRef.current.onmessage = event => {\n      const message = event.data;\n      setChatLog(prevChatLog => [...prevChatLog, message]);\n    };\n\n    // Close WebSocket connection on component unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    if (socketRef.current && message.trim() !== '') {\n      socketRef.current.send(message);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat\",\n      children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"message\",\n      value: message,\n      onChange: event => setMessage(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"wAiArrWSiYK2bJXfJpiLXqOu+n4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","chatLog","setChatLog","socketRef","current","WebSocket","onmessage","event","data","prevChatLog","close","sendMessage","trim","send","children","id","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nfunction Chat() {\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    // Open WebSocket connection\n    socketRef.current = new WebSocket('ws://localhost:8080');\n\n    // Handle incoming messages\n    socketRef.current.onmessage = (event) => {\n      const message = event.data;\n      setChatLog((prevChatLog) => [...prevChatLog, message]);\n    };\n\n    // Close WebSocket connection on component unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (socketRef.current && message.trim() !== '') {\n      socketRef.current.send(message);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"chat\">\n        {chatLog.map((message, index) => (\n          <p key={index}>{message}</p>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"message\"\n        value={message}\n        onChange={(event) => setMessage(event.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACAW,SAAS,CAACC,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAExD;IACAF,SAAS,CAACC,OAAO,CAACE,SAAS,GAAIC,KAAK,IAAK;MACvC,MAAMR,OAAO,GAAGQ,KAAK,CAACC,IAAI;MAC1BN,UAAU,CAAEO,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAEV,OAAO,CAAC,CAAC;IACxD,CAAC;;IAED;IACA,OAAO,MAAM;MACX,IAAII,SAAS,CAACC,OAAO,EAAE;QACrBD,SAAS,CAACC,OAAO,CAACM,KAAK,CAAC,CAAC;MAC3B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIR,SAAS,CAACC,OAAO,IAAIL,OAAO,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9CT,SAAS,CAACC,OAAO,CAACS,IAAI,CAACd,OAAO,CAAC;MAC/BC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAKmB,EAAE,EAAC,MAAM;MAAAD,QAAA,EACXb,OAAO,CAACe,GAAG,CAAC,CAACjB,OAAO,EAAEkB,KAAK,kBAC1BrB,OAAA;QAAAkB,QAAA,EAAgBf;MAAO,GAAfkB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAEzB,OAAQ;MACf0B,QAAQ,EAAGlB,KAAK,IAAKP,UAAU,CAACO,KAAK,CAACmB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACFzB,OAAA;MAAQ+B,OAAO,EAAEhB,WAAY;MAAAG,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACvB,EAAA,CA9CQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAgDb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}