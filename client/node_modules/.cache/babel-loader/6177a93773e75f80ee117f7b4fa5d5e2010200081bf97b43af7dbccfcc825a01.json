{"ast":null,"code":"var _jsxFileName = \"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const connectionRef = useRef(null);\n  const nameInputRef = useRef(null);\n  const messageInputRef = useRef(null);\n  useEffect(() => {\n    connectionRef.current = new WebSocket(\"ws://localhost:8080\");\n    connectionRef.current.onopen = () => {\n      console.log(\"WebSocket is open now.\");\n    };\n    connectionRef.current.onclose = () => {\n      console.log(\"WebSocket is closed now.\");\n    };\n    connectionRef.current.onerror = error => {\n      console.error(\"WebSocket error observed:\", error);\n    };\n    connectionRef.current.onmessage = event => {\n      const receivedData = event.data;\n      if (typeof receivedData === \"string\") {\n        // Handle text-based messages\n        setMessages(prevMessages => [...prevMessages, receivedData]);\n      } else if (receivedData instanceof Blob) {\n        // Handle blob data using FileReader\n        const reader = new FileReader();\n        reader.onload = () => {\n          const blobData = reader.result;\n          // Process the blob data as needed\n          setMessages(prevMessages => [...prevMessages, blobData]);\n        };\n        reader.readAsText(receivedData);\n      }\n    };\n    return () => {\n      // Close the WebSocket connection when the component unmounts\n      connectionRef.current.close();\n    };\n  }, []);\n  const handleSendMessage = () => {\n    const name = nameInputRef.current.value;\n    const message = messageInputRef.current.value;\n    const composedMessage = `${name}: ${message}`;\n\n    // Send composed message to the server\n    connectionRef.current.send(composedMessage);\n\n    // Clear input fields\n    nameInputRef.current.value = \"\";\n    messageInputRef.current.value = \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: nameInputRef,\n      type: \"text\",\n      placeholder: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: messageInputRef,\n      type: \"text\",\n      placeholder: \"message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"D3/2X6WmXTXHkwZa8Uu3xujFSTM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","connectionRef","nameInputRef","messageInputRef","current","WebSocket","onopen","console","log","onclose","onerror","error","onmessage","event","receivedData","data","prevMessages","Blob","reader","FileReader","onload","blobData","result","readAsText","close","handleSendMessage","name","value","message","composedMessage","send","children","id","map","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const connectionRef = useRef(null);\n  const nameInputRef = useRef(null);\n  const messageInputRef = useRef(null);\n\n  useEffect(() => {\n    connectionRef.current = new WebSocket(\"ws://localhost:8080\");\n\n    connectionRef.current.onopen = () => {\n      console.log(\"WebSocket is open now.\");\n    };\n\n    connectionRef.current.onclose = () => {\n      console.log(\"WebSocket is closed now.\");\n    };\n\n    connectionRef.current.onerror = (error) => {\n      console.error(\"WebSocket error observed:\", error);\n    };\n\n    connectionRef.current.onmessage = (event) => {\n      const receivedData = event.data;\n      if (typeof receivedData === \"string\") {\n        // Handle text-based messages\n        setMessages((prevMessages) => [...prevMessages, receivedData]);\n      } else if (receivedData instanceof Blob) {\n        // Handle blob data using FileReader\n        const reader = new FileReader();\n        reader.onload = () => {\n          const blobData = reader.result;\n          // Process the blob data as needed\n          setMessages((prevMessages) => [...prevMessages, blobData]);\n        };\n        reader.readAsText(receivedData);\n      }\n    };\n\n    return () => {\n      // Close the WebSocket connection when the component unmounts\n      connectionRef.current.close();\n    };\n  }, []);\n\n  const handleSendMessage = () => {\n    const name = nameInputRef.current.value;\n    const message = messageInputRef.current.value;\n    const composedMessage = `${name}: ${message}`;\n\n    // Send composed message to the server\n    connectionRef.current.send(composedMessage);\n\n    // Clear input fields\n    nameInputRef.current.value = \"\";\n    messageInputRef.current.value = \"\";\n  };\n\n  return (\n    <div>\n      <div id=\"chat\">\n        {messages.map((message, index) => (\n          <p key={index}>{message}</p>\n        ))}\n      </div>\n      <input ref={nameInputRef} type=\"text\" placeholder=\"name\" />\n      <input ref={messageInputRef} type=\"text\" placeholder=\"message\" />\n      <button onClick={handleSendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}