{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nconst NEW_CHAT_MESSAGE_EVENT = 'newChatMessage';\nconst SOCKET_SERVER_URL = 'http://localhost:4001'; // Update the URL to match the WebSocket server\n\nconst useChat = roomId => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: {\n        roomId\n      }\n    });\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, message => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id\n      };\n      setMessages(messages => [...messages, incomingMessage]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n  const sendMessage = messageBody => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id\n    });\n  };\n  return {\n    messages,\n    sendMessage\n  };\n};\n_s(useChat, \"rJUxOyV7d92WYkbiDZQ/Q3CnO+M=\");\nexport default useChat;","map":{"version":3,"names":["useEffect","useRef","useState","socketIOClient","NEW_CHAT_MESSAGE_EVENT","SOCKET_SERVER_URL","useChat","roomId","_s","messages","setMessages","socketRef","current","query","on","message","incomingMessage","ownedByCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body"],"sources":["/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/UseChat.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst NEW_CHAT_MESSAGE_EVENT = 'newChatMessage';\nconst SOCKET_SERVER_URL = 'http://localhost:4001'; // Update the URL to match the WebSocket server\n\nconst useChat = (roomId) => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: { roomId },\n    });\n\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n    });\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChat;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,MAAMC,sBAAsB,GAAG,gBAAgB;AAC/C,MAAMC,iBAAiB,GAAG,uBAAuB,CAAC,CAAC;;AAEnD,MAAMC,OAAO,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,SAAS,GAAGV,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACdW,SAAS,CAACC,OAAO,GAAGT,cAAc,CAACE,iBAAiB,EAAE;MACpDQ,KAAK,EAAE;QAAEN;MAAO;IAClB,CAAC,CAAC;IAEFI,SAAS,CAACC,OAAO,CAACE,EAAE,CAACV,sBAAsB,EAAGW,OAAO,IAAK;MACxD,MAAMC,eAAe,GAAG;QACtB,GAAGD,OAAO;QACVE,kBAAkB,EAAEF,OAAO,CAACG,QAAQ,KAAKP,SAAS,CAACC,OAAO,CAACO;MAC7D,CAAC;MACDT,WAAW,CAAED,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEO,eAAe,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,OAAO,MAAM;MACXL,SAAS,CAACC,OAAO,CAACQ,UAAU,CAAC,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,MAAMc,WAAW,GAAIC,WAAW,IAAK;IACnCX,SAAS,CAACC,OAAO,CAACW,IAAI,CAACnB,sBAAsB,EAAE;MAC7CoB,IAAI,EAAEF,WAAW;MACjBJ,QAAQ,EAAEP,SAAS,CAACC,OAAO,CAACO;IAC9B,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IAAEV,QAAQ;IAAEY;EAAY,CAAC;AAClC,CAAC;AAACb,EAAA,CA9BIF,OAAO;AAgCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}