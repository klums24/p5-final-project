{"ast":null,"code":"var _jsxFileName = \"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/NewRoutineForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Button, FormControl, InputLabel, MenuItem, Select, Typography } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewRoutineForm(_ref) {\n  _s();\n  let {\n    currentClient,\n    handleCreateRoutineClick,\n    workouts,\n    trainers\n  } = _ref;\n  const history = useHistory();\n  const [currentWorkouts, setCurrentWorkouts] = useState([]);\n  const [currentExercises, setCurrentExercises] = useState([]);\n  const routineSchema = yup.object({\n    workout_id: yup.number().required('Workout is required'),\n    exercise_id: yup.number().required('Exercise is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      workout_id: '',\n      exercise_id: ''\n    },\n    validationSchema: routineSchema,\n    onSubmit: values => {\n      console.log('Routine form submitted:', values);\n      // Send POST request to create a new routine\n      fetch('/routines', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          client_id: currentClient.id,\n          workout_id: values.workout_id,\n          exercise_id: values.exercise_id\n        })\n      }).then(response => {\n        if (response.ok) {\n          console.log('Routine created successfully');\n          // Redirect to the desired page\n          history.push('/dashboard');\n        } else {\n          console.error('Failed to create routine');\n        }\n      }).catch(error => {\n        console.error('An error occurred while creating routine:', error);\n      });\n    }\n  });\n  useEffect(() => {\n    // Fetch workouts and exercises based on the current client's ID\n    fetch(`/workouts?clientId=${currentClient.id}`).then(response => response.json()).then(data => setCurrentWorkouts(data)).catch(error => console.error('Error fetching workouts:', error));\n    fetch(`/exercises?clientId=${currentClient.id}`).then(response => response.json()).then(data => setCurrentExercises(data)).catch(error => console.error('Error fetching exercises:', error));\n  }, [currentClient.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routine-form\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      children: \"Create Routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"workout_id-label\",\n            children: \"Workout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"workout_id-label\",\n            id: \"workout_id\",\n            name: \"workout_id\",\n            value: formik.values.workout_id,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            error: formik.touched.workout_id && Boolean(formik.errors.workout_id),\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              disabled: true,\n              children: \"Select a workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), workouts.map(workout => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: workout.id,\n              children: workout.name\n            }, workout.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"exerciseId-label\",\n            children: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"exercise_id-label\",\n            id: \"exercise_id\",\n            name: \"exercise_id\",\n            value: formik.values.exercise_id,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            error: formik.touched.exercise_id && Boolean(formik.errors.exercise_id),\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              disabled: true,\n              children: \"Select an exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), exercises.map(exercise => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: exercise.id,\n              children: exercise.name\n            }, exercise.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(NewRoutineForm, \"PVZLpW4Q/+tymnWLwk01gZsnosI=\", false, function () {\n  return [useHistory, useFormik];\n});\n_c = NewRoutineForm;\nexport default NewRoutineForm;\nvar _c;\n$RefreshReg$(_c, \"NewRoutineForm\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","yup","Button","FormControl","InputLabel","MenuItem","Select","Typography","useHistory","jsxDEV","_jsxDEV","NewRoutineForm","_ref","_s","currentClient","handleCreateRoutineClick","workouts","trainers","history","currentWorkouts","setCurrentWorkouts","currentExercises","setCurrentExercises","routineSchema","object","workout_id","number","required","exercise_id","formik","initialValues","validationSchema","onSubmit","values","console","log","fetch","method","headers","body","JSON","stringify","client_id","id","then","response","ok","push","error","catch","json","data","className","children","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","fullWidth","labelId","name","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","disabled","map","workout","exercises","exercise","type","color","_c","$RefreshReg$"],"sources":["/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/NewRoutineForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Button, FormControl, InputLabel, MenuItem, Select, Typography } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\n\nfunction NewRoutineForm({ currentClient, handleCreateRoutineClick, workouts, trainers }) {\n  const history = useHistory();\n  const [currentWorkouts, setCurrentWorkouts] = useState([]);\n  const [currentExercises, setCurrentExercises] = useState([]);\n\n  const routineSchema = yup.object({\n    workout_id: yup.number().required('Workout is required'),\n    exercise_id: yup.number().required('Exercise is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      workout_id: '',\n      exercise_id: '',\n    },\n    validationSchema: routineSchema,\n    onSubmit: (values) => {\n      console.log('Routine form submitted:', values);\n      // Send POST request to create a new routine\n      fetch('/routines', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          client_id: currentClient.id,\n          workout_id: values.workout_id,\n          exercise_id: values.exercise_id,\n        }),\n      })\n        .then((response) => {\n          if (response.ok) {\n            console.log('Routine created successfully');\n            // Redirect to the desired page\n            history.push('/dashboard');\n          } else {\n            console.error('Failed to create routine');\n          }\n        })\n        .catch((error) => {\n          console.error('An error occurred while creating routine:', error);\n        });\n    },\n  });\n\n  useEffect(() => {\n    // Fetch workouts and exercises based on the current client's ID\n    fetch(`/workouts?clientId=${currentClient.id}`)\n      .then((response) => response.json())\n      .then((data) => setCurrentWorkouts(data))\n      .catch((error) => console.error('Error fetching workouts:', error));\n\n    fetch(`/exercises?clientId=${currentClient.id}`)\n      .then((response) => response.json())\n      .then((data) => setCurrentExercises(data))\n      .catch((error) => console.error('Error fetching exercises:', error));\n  }, [currentClient.id]);\n\n  return (\n    <div className=\"routine-form\">\n      <Typography variant=\"h4\" component=\"h2\">Create Routine</Typography>\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"form-group\">\n          <FormControl fullWidth>\n            <InputLabel id=\"workout_id-label\">Workout</InputLabel>\n            <Select\n              labelId=\"workout_id-label\"\n              id=\"workout_id\"\n              name=\"workout_id\"\n              value={formik.values.workout_id}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.workout_id && Boolean(formik.errors.workout_id)}\n              fullWidth\n            >\n              <MenuItem value=\"\" disabled>Select a workout</MenuItem>\n              {workouts.map((workout) => (\n                <MenuItem key={workout.id} value={workout.id}>{workout.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"form-group\">\n          <FormControl fullWidth>\n            <InputLabel id=\"exerciseId-label\">Exercise</InputLabel>\n            <Select\n              labelId=\"exercise_id-label\"\n              id=\"exercise_id\"\n              name=\"exercise_id\"\n              value={formik.values.exercise_id}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.exercise_id && Boolean(formik.errors.exercise_id)}\n              fullWidth\n            >\n              <MenuItem value=\"\" disabled>Select an exercise</MenuItem>\n              {exercises.map((exercise) => (\n                <MenuItem key={exercise.id} value={exercise.id}>{exercise.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewRoutineForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}