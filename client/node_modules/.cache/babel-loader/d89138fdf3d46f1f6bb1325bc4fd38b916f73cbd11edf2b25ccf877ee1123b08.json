{"ast":null,"code":"/* eslint-disable max-classes-per-file */\n\nconst {\n  InlineTextBuilder\n} = require('./inline-text-builder');\nclass StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.next = next;\n  }\n  getRoot() {\n    return this.next ? this.next : this;\n  }\n}\nclass BlockStackItem extends StackItem {\n  constructor(options) {\n    let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let leadingLineBreaks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let maxLineLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    super(next);\n    this.leadingLineBreaks = leadingLineBreaks;\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\nclass TableStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(next);\n    this.rows = [];\n    this.isPre = next && next.isPre;\n  }\n}\nclass TableRowStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(next);\n    this.cells = [];\n    this.isPre = next && next.isPre;\n  }\n}\nclass TableCellStackItem extends StackItem {\n  constructor(options) {\n    let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let maxColumnWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    super(next);\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\nclass TransformerStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let transform = arguments.length > 1 ? arguments[1] : undefined;\n    super(next);\n    this.transform = transform;\n  }\n}\nmodule.exports = {\n  BlockStackItem: BlockStackItem,\n  StackItem: StackItem,\n  TableCellStackItem: TableCellStackItem,\n  TableRowStackItem: TableRowStackItem,\n  TableStackItem: TableStackItem,\n  TransformerStackItem: TransformerStackItem\n};","map":{"version":3,"names":["InlineTextBuilder","require","StackItem","constructor","next","arguments","length","undefined","getRoot","BlockStackItem","options","leadingLineBreaks","maxLineLength","inlineTextBuilder","rawText","stashedLineBreaks","isPre","TableStackItem","rows","TableRowStackItem","cells","TableCellStackItem","maxColumnWidth","TransformerStackItem","transform","module","exports"],"sources":["/home/klums24/Development/code/phase-5/p5-final-project/client/node_modules/html-to-text/lib/stack-item.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nconst { InlineTextBuilder } = require('./inline-text-builder');\n\n\nclass StackItem {\n  constructor (next = null) { this.next = next; }\n\n  getRoot () { return (this.next) ? this.next : this; }\n}\n\nclass BlockStackItem extends StackItem {\n  constructor (options, next = null, leadingLineBreaks = 1, maxLineLength = undefined) {\n    super(next);\n    this.leadingLineBreaks = leadingLineBreaks;\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableStackItem extends StackItem {\n  constructor (next = null) {\n    super(next);\n    this.rows = [];\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableRowStackItem extends StackItem {\n  constructor (next = null) {\n    super(next);\n    this.cells = [];\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableCellStackItem extends StackItem {\n  constructor (options, next = null, maxColumnWidth = undefined) {\n    super(next);\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TransformerStackItem extends StackItem {\n  constructor (next = null, transform) {\n    super(next);\n    this.transform = transform;\n  }\n}\n\nmodule.exports = {\n  BlockStackItem: BlockStackItem,\n  StackItem: StackItem,\n  TableCellStackItem: TableCellStackItem,\n  TableRowStackItem: TableRowStackItem,\n  TableStackItem: TableStackItem,\n  TransformerStackItem: TransformerStackItem,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}