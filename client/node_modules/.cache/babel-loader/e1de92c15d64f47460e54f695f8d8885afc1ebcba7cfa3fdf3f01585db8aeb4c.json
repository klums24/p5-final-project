{"ast":null,"code":"var _jsxFileName = \"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { TextField, Button, Box, Paper, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    padding: theme.spacing(2)\n  },\n  chatBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    maxHeight: '300px',\n    overflowY: 'auto',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200]\n  },\n  message: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1)\n  },\n  inputContainer: {\n    display: 'flex',\n    gap: theme.spacing(1)\n  }\n}));\nfunction Chat() {\n  _s();\n  const classes = useStyles();\n  const [messages, setMessages] = useState([]);\n  const connectionRef = useRef(null);\n  const nameInputRef = useRef(null);\n  const messageInputRef = useRef(null);\n  useEffect(() => {\n    connectionRef.current = new WebSocket('ws://localhost:8080');\n    connectionRef.current.onopen = () => {\n      console.log('WebSocket is open now.');\n    };\n    connectionRef.current.onclose = () => {\n      console.log('WebSocket is closed now.');\n    };\n    connectionRef.current.onerror = error => {\n      console.error('WebSocket error observed:', error);\n    };\n    connectionRef.current.onmessage = event => {\n      const receivedData = event.data;\n      if (typeof receivedData === 'string') {\n        setMessages(prevMessages => [...prevMessages, receivedData]);\n      } else if (receivedData instanceof Blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          const blobData = reader.result;\n          setMessages(prevMessages => [...prevMessages, blobData]);\n        };\n        reader.readAsText(receivedData);\n      }\n    };\n    return () => {\n      connectionRef.current.close();\n    };\n  }, []);\n  const handleSendMessage = () => {\n    const name = nameInputRef.current.value;\n    const message = messageInputRef.current.value;\n    const composedMessage = `${name}: ${message}`;\n    connectionRef.current.send(composedMessage);\n    nameInputRef.current.value = '';\n    messageInputRef.current.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      children: \"Chat Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.chatBox,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.message,\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        inputRef: nameInputRef,\n        type: \"text\",\n        placeholder: \"Name\",\n        variant: \"outlined\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        inputRef: messageInputRef,\n        type: \"text\",\n        placeholder: \"Message\",\n        variant: \"outlined\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"CacAsqxMIbPY7j679BT6cLx8psc=\", false, function () {\n  return [useStyles];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","TextField","Button","Box","Paper","Typography","makeStyles","jsxDEV","_jsxDEV","useStyles","theme","root","display","flexDirection","gap","spacing","padding","chatBox","maxHeight","overflowY","backgroundColor","palette","grey","message","primary","main","color","common","white","borderRadius","inputContainer","Chat","_s","classes","messages","setMessages","connectionRef","nameInputRef","messageInputRef","current","WebSocket","onopen","console","log","onclose","onerror","error","onmessage","event","receivedData","data","prevMessages","Blob","reader","FileReader","onload","blobData","result","readAsText","close","handleSendMessage","name","value","composedMessage","send","className","children","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","map","index","inputRef","type","placeholder","size","onClick","_c","$RefreshReg$"],"sources":["/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { TextField, Button, Box, Paper, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  chatBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    maxHeight: '300px',\n    overflowY: 'auto',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200],\n  },\n  message: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n  },\n  inputContainer: {\n    display: 'flex',\n    gap: theme.spacing(1),\n  },\n}));\n\nfunction Chat() {\n  const classes = useStyles();\n  const [messages, setMessages] = useState([]);\n  const connectionRef = useRef(null);\n  const nameInputRef = useRef(null);\n  const messageInputRef = useRef(null);\n\n  useEffect(() => {\n    connectionRef.current = new WebSocket('ws://localhost:8080');\n\n    connectionRef.current.onopen = () => {\n      console.log('WebSocket is open now.');\n    };\n\n    connectionRef.current.onclose = () => {\n      console.log('WebSocket is closed now.');\n    };\n\n    connectionRef.current.onerror = (error) => {\n      console.error('WebSocket error observed:', error);\n    };\n\n    connectionRef.current.onmessage = (event) => {\n      const receivedData = event.data;\n      if (typeof receivedData === 'string') {\n        setMessages((prevMessages) => [...prevMessages, receivedData]);\n      } else if (receivedData instanceof Blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          const blobData = reader.result;\n          setMessages((prevMessages) => [...prevMessages, blobData]);\n        };\n        reader.readAsText(receivedData);\n      }\n    };\n\n    return () => {\n      connectionRef.current.close();\n    };\n  }, []);\n\n  const handleSendMessage = () => {\n    const name = nameInputRef.current.value;\n    const message = messageInputRef.current.value;\n    const composedMessage = `${name}: ${message}`;\n\n    connectionRef.current.send(composedMessage);\n\n    nameInputRef.current.value = '';\n    messageInputRef.current.value = '';\n  };\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h5\" component=\"h2\">\n        Chat Box\n      </Typography>\n      <Paper className={classes.chatBox}>\n        {messages.map((message, index) => (\n          <Typography key={index} className={classes.message}>\n            {message}\n          </Typography>\n        ))}\n      </Paper>\n      <Box className={classes.inputContainer}>\n        <TextField\n          inputRef={nameInputRef}\n          type=\"text\"\n          placeholder=\"Name\"\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <TextField\n          inputRef={messageInputRef}\n          type=\"text\"\n          placeholder=\"Message\"\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Button variant=\"contained\" onClick={handleSendMessage}>\n          Send\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}