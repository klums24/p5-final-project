[{"/home/klums24/Development/code/phase-5/p5-final-project/client/src/index.js":"1","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/App.js":"2","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/NewClientForm.js":"3","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/SignInForm.js":"4","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/ClientProfile.js":"5","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/EditProfileForm.js":"6","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/TrainerCollection.js":"7","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/TrainerCard.js":"8","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/NewExerciseForm.js":"9","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/UserContext.js":"10","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/ContactUsForm.js":"11"},{"size":404,"mtime":1689122457414,"results":"12","hashOfConfig":"13"},{"size":4502,"mtime":1689359253501,"results":"14","hashOfConfig":"13"},{"size":5594,"mtime":1689284416686,"results":"15","hashOfConfig":"13"},{"size":3009,"mtime":1689196072946,"results":"16","hashOfConfig":"13"},{"size":1539,"mtime":1689359219091,"results":"17","hashOfConfig":"13"},{"size":5211,"mtime":1689271388846,"results":"18","hashOfConfig":"13"},{"size":1785,"mtime":1689271388846,"results":"19","hashOfConfig":"13"},{"size":695,"mtime":1689274278466,"results":"20","hashOfConfig":"13"},{"size":3142,"mtime":1689287188006,"results":"21","hashOfConfig":"13"},{"size":112,"mtime":1689313843828,"results":"22","hashOfConfig":"13"},{"size":912,"mtime":1689359470301,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1g8tbsm",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"27"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/klums24/Development/code/phase-5/p5-final-project/client/src/index.js",[],[],[],"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/App.js",[],[],"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/NewClientForm.js",["62"],[],"import React from 'react'\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField, Button, Typography } from '@mui/material';\n\nfunction NewClientForm({saveClient, handleToggleForm}) {\n\n    const userSchema = yup.object({\n      first_name: yup.string().required(\"Must enter a first name\"),\n      last_name: yup.string().required(\"Must enter a last name\"),\n      email: yup.string().required(\"Must enter an email\"),\n      password: yup.string()\n        .required(\"Please enter your password\")\n        .min(8, \"Password must contain at least 8 characters\"),\n    });\n      const formik = useFormik ({\n          initialValues: {\n              first_name: \"\",\n              last_name: \"\",\n              email: \"\",\n              password: \"\",\n          },\n          validationSchema: userSchema,\n          onSubmit: values => {\n              console.log('Form submitted:', values)\n              fetch(\"/signup\", {\n                  method:\"POST\",\n                  headers: {\n                      \"Content-Type\": \"application/json\",   \n                  },\n                  body: JSON.stringify(values, null, 2),\n              }).then(resp => {\n                  console.log(\"RESP\", resp)\n                  if (resp.ok) {\n                      resp.json()\n                      .then(client => {\n                          saveClient(client)\n                      })\n                  }\n                  else {\n                      resp.json()\n                      .then(error=> {\n                          alert(error.error)\n                      })\n                  }\n              })\n          },\n      });\n  \n     \n  \n    return (\n        <div className=\"signup-form\">\n          <Typography variant=\"h4\" component=\"h2\">Sign Up</Typography>\n          <form onSubmit={formik.handleSubmit}>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"first_name\">First Name:</label>\n              <input\n                id=\"first_name\"\n                name=\"first_name\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.first_name}\n                placeholder=\"First Name\"\n              />\n              {formik.touched.first_name && formik.errors.first_name && (\n                <div className=\"error\">{formik.errors.first_name}</div>\n              )}\n            </div>\n    \n            <div className=\"form-group\">\n              <label htmlFor=\"last_name\">Last Name:</label>\n              <input\n                id=\"last_name\"\n                name=\"last_name\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.last_name}\n                placeholder=\"Last Name\"\n              />\n              {formik.touched.last_name && formik.errors.last_name && (\n                <div className=\"error\">{formik.errors.last_name}</div>\n              )}\n            </div>\n    \n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n                placeholder=\"Email\"\n              />\n              {formik.touched.email && formik.errors.email && (\n                <div className=\"error\">{formik.errors.email}</div>\n              )}\n            </div>\n    \n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password:</label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.password}\n                placeholder=\"Password\"\n              />\n              {formik.touched.password && formik.errors.password && (\n                <div className=\"error\">{formik.errors.password}</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"main_goal\">Main goal for workout:</label>\n              <select\n                id=\"main_goal\"\n                name=\"main_goal\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.main_goal}\n                \n              >\n                <option value=\"\" label=\"Select an option\">\n                  Select an option\n                </option>\n                <option value=\"Weight loss\" label=\"Weight Loss\">\n                  Weight Loss\n                </option>\n                <option value=\"Increase strength\" label=\"Increase Strength\">\n                  Increase Strength\n                </option>\n                <option value=\"Improve cardio\" label=\"Improve cardio\">\n                  Improve cardio\n                </option>\n\n              </select>\n              {formik.touched.main_goal && formik.errors.main_goal && (\n                <div className=\"error\">{formik.errors.main_goal}</div>\n              )}\n            </div>      \n            \n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\">Submit</Button>\n          </form>\n          <Button onClick={handleToggleForm} variant=\"text\">\n            Existing user? Click here to login\n          </Button>\n        </div>\n    );\n}\n      \n      export default NewClientForm;","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/SignInForm.js",["63"],[],"import React from 'react'\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField, Button, Typography } from '@mui/material';\n\nfunction SignInForm({saveClient, handleToggleForm}) {\n\n    const userSchema = yup.object({\n      email: yup.string().required(\"Must enter an email\"),\n      password: yup.string()\n        .required(\"Please enter your password\")\n        .min(4, \"Password must contain at least 8 characters\"),\n    });\n      const formik = useFormik ({\n          initialValues: {\n              email: \"\",\n              password: \"\",\n          },\n          validationSchema: userSchema,\n          onSubmit: values => {\n              fetch(\"/signin\", {\n                  method:\"POST\",\n                  headers: {\n                      \"Content-Type\": \"application/json\",   \n                  },\n                  body: JSON.stringify(values, null, 2),\n              }).then(resp => {\n                  console.log(\"RESP\", resp)\n                  if (resp.ok) {\n                      resp.json()\n                      .then(client => {\n                          saveClient(client)\n                      })\n                  }\n                  else {\n                      resp.json()\n                      .then(error=> {\n                          alert(error.error)\n                      })\n                  }\n              })\n          },\n      });\n  \n     \n  \n    return (\n        <div className=\"signup-form\">\n          <Typography variant=\"h4\" component=\"h2\">Sign In</Typography>\n          <form onSubmit={formik.handleSubmit}>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n                placeholder=\"Email\"\n              />\n              {formik.touched.email && formik.errors.email && (\n                <div className=\"error\">{formik.errors.email}</div>\n              )}\n            </div>\n    \n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password:</label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.password}\n                placeholder=\"Password\"\n              />\n              {formik.touched.password && formik.errors.password && (\n                <div className=\"error\">{formik.errors.password}</div>\n              )}\n            </div>\n    \n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\">Submit</Button>\n          </form>\n          <Button onClick={handleToggleForm} variant=\"text\">\n            Click here to sign up!\n          </Button>\n        </div>\n    );\n}\n      \n      export default SignInForm;","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/ClientProfile.js",["64","65"],[],"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/EditProfileForm.js",["66"],[],"import React from 'react'\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField,  AppBar, Toolbar, Button, Box, Typography } from '@mui/material';\nimport {useHistory} from 'react-router-dom'\n\nfunction EditProfileForm({currentClient, saveClient, handleSignOutClick, handleEditProfileClick, handleTrainersClick, handleCreateWorkoutClick, handleDeleteAccountClick}) {\n    const history = useHistory()\n\n    const handleBackToProfileClick = () => {\n        history.push(\"/\")\n    }\n\n\n\n    const formik = useFormik({\n        initialValues: {\n            first_name: currentClient.first_name,\n            email: currentClient.email,\n            main_goal: currentClient.main_goal,\n        },\n        validationSchema: yup.object({\n            first_name: yup.string().required(\"Please enter your first name\"),\n            email: yup.string().required(\"Please enter an email\"),\n            main_goal: yup.string().required(\"Please enter your main workout goal\"),\n        }),\n        onSubmit: values => {\n          fetch(`/clients/${currentClient.id}`, {\n            method:\"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(values, null, 2),\n          }).then(response => {\n            if (response.ok) {\n              response.json()\n              .then(client => {\n                saveClient(client) \n              })\n            }\n            else {\n              response.json()\n              .then(error => {\n                alert(error.error)\n              })\n            }\n          })\n        },\n    });\n    return (\n      <>\n        <AppBar position=\"static\">\n        <Toolbar sx={{ justifyContent: 'space-between' }}>\n          <Box>\n            <Typography variant=\"h4\" component=\"div\" sx={{ fontFamily: 'Arial', fontWeight: 'bold' }}>\n              PerfectFit\n            </Typography>\n          </Box>\n          <Box>\n            <Button onClick={handleTrainersClick} color=\"inherit\">\n              See all trainers\n            </Button>\n            <Button onClick={handleCreateWorkoutClick} color=\"inherit\">\n              Create a workout\n            </Button>\n            <Button onClick={handleEditProfileClick} color=\"inherit\">\n              Edit Profile\n            </Button>\n            <Button onClick={handleDeleteAccountClick} color=\"inherit\">\n              Delete account\n            </Button>\n            <Button onClick={handleSignOutClick} color=\"inherit\">\n              Sign Out\n            </Button>\n          </Box>\n        </Toolbar>\n        </AppBar>\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"first_name\">First Name:</label>\n              <input\n                id=\"first_name\"\n                name=\"first_name\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.first_name}\n                placeholder=\"First Name\"\n              />\n              {formik.touched.first_name && formik.errors.first_name && (\n                <div className=\"error\">{formik.errors.first_name}</div>\n              )}\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n                placeholder=\"Email\"\n              />\n              {formik.touched.email && formik.errors.email && (\n                <div className=\"error\">{formik.errors.email}</div>\n              )}\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"main_goal\">Main goal for workout:</label>\n              <select\n                id=\"main_goal\"\n                name=\"main_goal\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.main_goal}\n                \n              >\n                <option value=\"\" label=\"Select an option\">\n                  Select an option\n                </option>\n                <option value=\"Weight loss\" label=\"Weight Loss\">\n                  Weight Loss\n                </option>\n                <option value=\"Increase strength\" label=\"Increase Strength\">\n                  Increase Strength\n                </option>\n                <option value=\"Improve cardio\" label=\"Improve cardio\">\n                  Improve cardio\n                </option>\n\n              </select>\n              {formik.touched.main_goal && formik.errors.main_goal && (\n                <div className=\"error\">{formik.errors.main_goal}</div>\n              )}\n            </div>\n\n            <Button class=\"button\" type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\">Update</Button>\n\n        </form>\n        <Button onClick={handleBackToProfileClick} variant=\"text\">\n            Back to Profile\n        </Button>\n      </>\n      )\n}\n\nexport default EditProfileForm","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/TrainerCollection.js",[],[],"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/TrainerCard.js",[],[],"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/NewExerciseForm.js",[],[],"/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/UserContext.js",["67"],[],"import React from 'react'\nimport { createContext } from 'react'\n\nexport const UserContext = createContext(null)\n","/home/klums24/Development/code/phase-5/p5-final-project/client/src/components/ContactUsForm.js",[],[],{"ruleId":"68","severity":1,"message":"69","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":19},{"ruleId":"68","severity":1,"message":"72","line":7,"column":22,"nodeType":"70","messageId":"71","endLine":7,"endColumn":31},{"ruleId":"68","severity":1,"message":"73","line":7,"column":33,"nodeType":"70","messageId":"71","endLine":7,"endColumn":35},{"ruleId":"68","severity":1,"message":"69","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":19},{"ruleId":"68","severity":1,"message":"74","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'last_name' is assigned a value but never used.","'id' is assigned a value but never used.","'React' is defined but never used."]